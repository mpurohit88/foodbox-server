{"version":3,"sources":["Customer.js","httpClient.js","Helper.js","Common/tiffinDropDown.js","Dialog/Schedule.js","Dialog/index.js","App.js","serviceWorker.js","index.js"],"names":["Customer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","saveCustomer","bind","assertThisInitialized","that","Promise","resolve","reject","axios","method","then","res","data","catch","err","console","log","customers","setCustomers","customer","obj","firstName","document","getElementById","value","middleName","lastName","email","sex","mobile","cityName","react_default","a","createElement","className","type","name","id","onClick","map","index","concat","FirstName","MiddleName","LastName","Email","Sex","Mobile","CityName","openDialog","_id","Component","moment","require","getDaysInMonth","month","year","daysInMonth","getTodaysDate","TiffinDropDown","isDialogOpen","class","Schedule","shedule","customerId","date","tiffinType","handleClose","setSchedule","_this2","dist_default","title","modal","onClose","buttons","text","tiffinDropDown_TiffinDropDown","_updateSchedule","DialogBox","setState","schedule","createCalendar","days","table","td","todaysDay","startOf","get","i","push","_loop","colorCode","isDateExistInSchedule","updateSchedule","length","showDialog","saveShedule","_getSchedule","startDate","endDate","isWeekend","checked","prevProps","prevState","day","query","undefined","Date","isSame","tiffin","launch","dinner","htmlFor","Schedule_Schedule","CustomerId","App","filterCustomer","originalList","products","slice","newProducts","insert","toLowerCase","indexOf","TiffinType","onChange","src_Customer","Dialog","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a23cc823.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { saveCustomer, getCustomers } from './httpClient';\r\n\r\nclass Customer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n\r\n    this.saveCustomer = this.saveCustomer.bind(this);\r\n  }\r\n  \r\n  componentDidMount() {\r\n    const that = this;\r\n\r\n    getCustomers().then(function(customers) {\r\n      that.props.setCustomers(customers);\r\n    });\r\n  }\r\n\r\n  saveCustomer() {\r\n    const that = this;\r\n\r\n    const obj = {\r\n      firstName: document.getElementById('FirstName_0').value,\r\n      middleName: document.getElementById('MiddleName_0').value,\r\n      lastName: document.getElementById('LastName_0').value,\r\n      email: document.getElementById('Email_0').value,\r\n      sex: document.getElementById('Sex_0').value,\r\n      mobile: document.getElementById('Mobile_0').value,\r\n      cityName: document.getElementById('CityName_0').value\r\n    }\r\n\r\n    saveCustomer(obj).then(function(customers){\r\n        that.props.setCustomers(customers);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const that = this;\r\n    return [\r\n        <div>\r\n               <table className=\"table table-bordered\">\r\n               <thead>\r\n                 <tr>\r\n                   <th>First Name</th>\r\n                   <th>Middle Name</th>\r\n                   <th>Last Name</th>\r\n                   <th>Email</th>\r\n                   <th>Sex</th>\r\n                   <th>Mobile</th>\r\n                   <th>Address</th>\r\n                   <th>Action</th>\r\n                 </tr>\r\n               </thead>\r\n     \r\n               <tbody>\r\n                  <tr>\r\n                   <td><input type='text' name='firstName' id='FirstName_0' /></td>\r\n                   <td><input type='text' name='middleName' id='MiddleName_0' /></td>\r\n                   <td><input type='text' name='lastName' id='LastName_0' /></td>\r\n                   <td><input type='text' name='email' id='Email_0' /></td>\r\n                   <td>\r\n                    <select id='Sex_0'>\r\n                      <option value=\"M\">\r\n                        Male\r\n                      </option>\r\n                      <option value=\"F\">\r\n                        Female\r\n                      </option>\r\n                    </select>\r\n                   </td>\r\n                   <td><input type='text' name='mobile' id='Mobile_0' /></td>\r\n                   <td><input type='text' name='cityName' id='CityName_0' /></td>\r\n                   {/* <td>\r\n                      <select id='TiffinType_0'>\r\n                        <option value=\"1\">Launch</option>\r\n                        <option value=\"2\">Dinner</option>\r\n                        <option value=\"3\">Both</option>\r\n                      </select>\r\n                    </td>\r\n                    <td><input type='date' id='StartDate_0' name='startDate'/></td>\r\n                    <td><input type='date' id='EndDate_0' name='endDate'/></td> */}\r\n                   <td><input type='button' id='AddCustomer' value='Add Customer' onClick={this.saveCustomer}/></td>\r\n                  </tr>\r\n                {\r\n                  this.props.customers && this.props.customers.map(function(customer, index) {\r\n                  return <tr>\r\n                          <td>\r\n                            <label type='text' name=\"firstName\" id={`FirstName_${index}`}>{customer.FirstName}</label>\r\n                          </td>\r\n                          <td>\r\n                            <label type='text' name=\"middleName\" id={`MiddleName_${index}`}>{customer.MiddleName}</label>\r\n                          </td>\r\n                          <td>\r\n                            <label type='text' name=\"lastsName\" id={`LastName_${index}`}>{customer.LastName}</label>\r\n                          </td>\r\n                          <td>\r\n                            <label type='text' name=\"email\" id={`Email_${index}`}>{customer.Email}</label>\r\n                          </td>\r\n                          <td>\r\n                            <label type='text' name=\"sex\" id={`Sex_${index}`}>{customer.Sex}</label>\r\n                          </td>\r\n                          <td>\r\n                            <label type='text' name=\"mobile\" id={`Mobile_${index}`}>{customer.Mobile}</label>\r\n                          </td>\r\n                          <td>\r\n                            <label type='text' name=\"cityName\" id={`CityName_${index}`}>{customer.CityName}</label>\r\n                          </td>\r\n                          <td>\r\n                              <input type='button' name='schedule' id={`Schedule_${index}`} value='Schedule' onClick={() => that.props.openDialog(customer._id)}/>\r\n                          </td>\r\n                        </tr>;\r\n                  })\r\n               }\r\n               </tbody>\r\n     \r\n             </table>\r\n        </div>\r\n    ]\r\n  }\r\n}\r\n\r\nexport default Customer;\r\n","import axios from 'axios';\r\nimport { parseXml, xmlToJson } from './parseXML';\r\n\r\nexport const saveSchedule = function (shedule) {\r\n    return new Promise(function (resolve, reject) {\r\n        axios('api/saveSchedule', {\r\n            method: 'POST',\r\n            data: shedule\r\n        }).then(res => {\r\n            resolve(res.data);\r\n        })\r\n            .catch(err => {\r\n                console.log(err);\r\n                reject(err);\r\n            });\r\n    });\r\n}\r\n\r\nexport const updateSchedule = function (shedule) {\r\n    return new Promise(function (resolve, reject) {\r\n        axios('api/updateSchedule', {\r\n            method: 'POST',\r\n            data: shedule\r\n        }).then(res => {\r\n            resolve(res.data);\r\n        })\r\n            .catch(err => {\r\n                console.log(err);\r\n                reject(err);\r\n            });\r\n    });\r\n}\r\n\r\n\r\n\r\nexport const saveCustomer = function (customer) {\r\n    return new Promise(function (resolve, reject) {\r\n        axios('api/saveCustomer', {\r\n            method: 'POST',\r\n            data: customer\r\n        }).then(res => {\r\n            resolve(res.data);\r\n        })\r\n            .catch(err => {\r\n                console.log(err);\r\n                reject(err);\r\n            });\r\n    });\r\n}\r\n\r\nexport const getCustomers = function (query) {\r\n    return new Promise(function (resolve, reject) {\r\n        axios('api/getCustomers', {\r\n            method: 'GET',\r\n        }).then(res => {\r\n            resolve(res.data);\r\n        })\r\n            .catch(err => {\r\n                console.log(err);\r\n                reject(err);\r\n            });\r\n    })\r\n}\r\n\r\nexport const getSchedule = function (query) {\r\n    return new Promise(function (resolve, reject) {\r\n        axios('api/getSchedule?customerId=' + query, {\r\n            method: 'GET',\r\n        }).then(res => {\r\n            resolve(res.data);\r\n        })\r\n            .catch(err => {\r\n                console.log(err);\r\n                reject(err);\r\n            });\r\n    })\r\n}\r\n\r\n//Ender\\'s+Game","const moment = require('moment');\r\n\r\nexport const getDaysInMonth = function(month,year) {\r\n    month = month + 1;\r\n    // Here January is 1 based\r\n    //Day 0 is the last day in the previous month\r\n    return moment(year + \"-\" + month).daysInMonth();\r\n  // Here January is 0 based\r\n  // return new Date(year, month+1, 0).getDate();\r\n};\r\n\r\nexport const getMonth = function(d){\r\n    var month=['January','February','March','April','May','June','July','August','September','October','November','December'];\r\n \r\n    return month[d]\r\n};\r\n\r\nexport const getTodaysDate = function() {\r\n    return moment();\r\n}\r\n\r\n// export const getMonth = function(date) {\r\n//     return moment(date).getMonth();\r\n// }","\r\n\r\n\timport React, { Component } from 'react';\r\n\r\n\texport default class TiffinDropDown extends Component {\r\n\tconstructor(props) {\r\n\t\t\tsuper(props);\r\n\r\n\t\t\tthis.state = {\r\n\t\t\tisDialogOpen: false\r\n\t\t}\r\n\t}\r\n  render() {\r\n    return [\r\n\t\t\t\t\t\t\t<span>Tiffin Type:</span>,\r\n\t\t\t\t\t\t\t<select id={'TiffinType_' + this.props.id} >\r\n\t\t\t\t\t\t\t\t<option value=\"0\">--Select--</option>\r\n\t\t\t\t\t\t\t\t<option class=\"launch\" value=\"1\">Launch</option>\r\n\t\t\t\t\t\t\t\t<option class=\"dinner\" value=\"2\">Dinner</option>\r\n\t\t\t\t\t\t\t\t<option class=\"both\" value=\"3\">Both</option>\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t]\r\n  }\r\n}","\r\n\r\n\timport React, { Component } from 'react';\r\n\timport Dialog from 'react-dialog'\r\n\r\n\timport TiffinDropDown from '../Common/tiffinDropDown';\r\n\r\n\timport { updateSchedule } from '../httpClient';\r\n\r\n\texport default class Schedule extends Component {\r\n\tconstructor(props) {\r\n\t\t\tsuper(props);\r\n\r\n\t\t\tthis.state = {}\r\n\t}\r\n\r\n\t_updateSchedule() {\r\n\t\tconst { props } = this;\r\n\r\n\t\tconst obj = {\r\n\t\t\t_id: props._id,\r\n\t\t\tcustomerId: props.customerId,\r\n\t\t\tindex: props.index,\r\n\t\t\tdate: props.date,\r\n\t\t\ttiffinType: document.getElementById('TiffinType_Update').value,\r\n\t\t}\r\n\r\n\t\tupdateSchedule(obj).then(function(data) {\r\n\t\t\tprops.handleClose();\r\n\t\t\tprops.setSchedule(data);\r\n\t\t\tconsole.log(\"updated.................\", data);\r\n\t\t});\r\n\t}\r\n\r\n  render() {\r\n    return [\r\n\t\t\t<Dialog\r\n\t\t\t\ttitle=\"Update Schedule\"\r\n\t\t\t\tmodal={true}\r\n\t\t\t\tonClose={this.props.handleClose}\r\n\t\t\t\tbuttons={\r\n\t\t\t\t\t\t[{\r\n\t\t\t\t\t\t\t\ttext: \"Close\",\r\n\t\t\t\t\t\t\t\tonClick: () => this.props.handleClose()\r\n\t\t\t\t\t\t}]\r\n\t\t\t}>\r\n\t\t\t\t<h3>{this.props.date}</h3>\r\n\t\t\t\t<TiffinDropDown id=\"Update\"/>\r\n\t\t\t\t&nbsp;&nbsp;&nbsp;\r\n\t\t\t\t<input type='button' name='updateSchedule' id='UpdateShedule' value='Update' onClick={() => this._updateSchedule()}/>\r\n\r\n\t\t\t</Dialog>\r\n\t\t\t]\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\n\r\nimport Dialog from 'react-dialog'\r\nimport { saveSchedule, getSchedule, updateSchedule } from '../httpClient';\r\nimport { getDaysInMonth, getMonth, getTodaysDate } from '../Helper';\r\nimport TiffinDropDown from '../Common/tiffinDropDown';\r\nimport Schedule from '../Dialog/Schedule';\r\n\r\nclass DialogBox extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {showDialog: false};\r\n\r\n    this.saveShedule = this.saveShedule.bind(this);\r\n    this._getSchedule = this._getSchedule.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n  }\r\n\r\n  setSchedule = (data) => {\r\n    this.setState({schedule: data});\r\n  }\r\n\r\n  saveShedule() {\r\n      const that = this;\r\n\r\n      const obj = {\r\n        startDate: document.getElementById('StartDate').value,\r\n        endDate: document.getElementById('EndDate').value,\r\n        customerId: this.props.customerId,\r\n        tiffinType: document.getElementById('TiffinType_Schedule').value,\r\n        isWeekend: document.getElementById('Yes').checked\r\n    }\r\n\r\n    saveSchedule(obj).then(function(schedule) {\r\n        console.log(\"Schedule.............\", schedule);\r\n        that.setState({schedule});\r\n    });\r\n  }\r\n  \r\n  getSnapshotBeforeUpdate(prevProps, prevState) {\r\n\r\n    if(prevProps.customerId !== this.props.customerId) {\r\n        this._getSchedule();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n      this._getSchedule();\r\n  }\r\n\r\n  handleClose() {\r\n      this.setState({showDialog: false});\r\n  }\r\n\r\n  updateSchedule(index, day, date) {\r\n    this.setState({showDialog: true, index: index, date: date.year() + \"-\" + date.month() + \"-\" + day});\r\n  }\r\n\r\n  _getSchedule() {\r\n    const that = this;\r\n\r\n    getSchedule(this.props.customerId).then(function(schedule) {\r\n        console.log(\"Schedule.............\", schedule);\r\n        that.setState({schedule});\r\n      });\r\n  }\r\n\r\n  isDateExistInSchedule(day, month, year) {\r\n    let colorCode = undefined;\r\n\r\n    this.state.schedule && this.state.schedule[0] && (this.state.schedule[0].Date || []).map(function(data, index) {\r\n        if(moment(year + '-' + month + '-' + day).isSame(data.date)) {\r\n            if(data.tiffin) {\r\n                if(data.tiffin.launch && data.tiffin.dinner) {\r\n                    colorCode = {colorCode: 'both', index: index};\r\n                } else if(data.tiffin.launch) {\r\n                    colorCode = {colorCode: 'launch', index: index};\r\n                } else if(data.tiffin.dinner) {\r\n                    colorCode = {colorCode: 'dinner', index: index};\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    return colorCode;\r\n  }\r\n\r\n  createCalendar = (date) => {\r\n    const days = getDaysInMonth(date.month(), date.year());\r\n\r\n    let table = []\r\n    let tr = [];\r\n    let td = [];\r\n\r\n    let todaysDay = date.startOf('month').get('day');\r\n\r\n    for(let i = 1; i < todaysDay; i++)\r\n    {\r\n        td.push(<td></td>)\r\n    }\r\n\r\n    todaysDay = 8 - todaysDay;\r\n\r\n    for (let i = 1; i <= days; i++) {\r\n        const colorCode = this.isDateExistInSchedule(i, date.month() + 1, date.year());\r\n\r\n        if(i%(todaysDay) === 0) {\r\n            todaysDay += 7;\r\n            td.push(<td className={colorCode && colorCode.colorCode} onClick={() => this.updateSchedule(colorCode && colorCode.index, i, date)}>{i}</td>)\r\n            table.push(<tr>{td}</tr>);\r\n            td = [];\r\n        } else {\r\n            td.push(<td className={colorCode && colorCode.colorCode} onClick={() => this.updateSchedule(colorCode && colorCode.index, i, date)}>{i}</td>)\r\n        }\r\n    }\r\n\r\n    if(td.length > 0) {\r\n        table.push(<tr>{td}</tr>);\r\n    }\r\n\r\n    return table\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n        <Dialog\r\n            title=\"Manage Schedule\"\r\n            modal={true}\r\n            onClose={this.props.handleClose}\r\n            buttons={\r\n                [{\r\n                    text: \"Close\",\r\n                    onClick: () => this.props.handleClose()\r\n                }]\r\n            }>\r\n            {/* {this.props.customerId} <br /> */}\r\n            <br />\r\n            Start Date: <input type='date' name='startDate' id='StartDate' /> &nbsp;\r\n            End Date: <input type='date' name='endDate' id='EndDate' /> <br /><br />\r\n            \r\n            <div>\r\n\r\n               <TiffinDropDown id=\"Schedule\" /> &nbsp;\r\n                <label>Include Weekends:</label> &nbsp;\r\n                <input type=\"radio\" id=\"Yes\" name=\"drone\" value=\"yes\"\r\n                        checked />\r\n                <label htmlFor=\"Yes\">Yes</label>&nbsp;\r\n                <input type=\"radio\" id=\"No\" name=\"drone\" value=\"no\" />\r\n                <label htmlFor=\"No\">No</label>\r\n            </div>\r\n            <div>\r\n               \r\n            </div><br />\r\n            \r\n            <input type='button' name='saveSchedule' id='SaveShedule' value='Save' onClick={() => this.saveShedule()}/>\r\n            <br /><br />\r\n            <div className=\"month\"> \r\n                <ul>\r\n                    <li className=\"prev\">&#10094;</li>\r\n                    <li className=\"next\">&#10095;</li>\r\n                    <li>{getMonth(getTodaysDate().month())}<br /><span>{getTodaysDate().year()}</span></li>\r\n                </ul>\r\n            </div>\r\n\r\n            <table className=\"weekdays\">\r\n                <thead>\r\n                <tr>\r\n                    <td>Mo</td>\r\n                    <td>Tu</td>\r\n                    <td>We</td>\r\n                    <td>Th</td>\r\n                    <td>Fr</td>\r\n                    <td>Sa</td>\r\n                    <td>Su</td>\r\n                </tr>\r\n                </thead>\r\n                <tbody  className=\"days\">\r\n                    {this.createCalendar(getTodaysDate())}\r\n                </tbody>\r\n            </table>\r\n           \r\n            {/* <li><span class=\"active\">10</span></li> */}\r\n\r\n            {\r\n\r\n                this.state.showDialog && <Schedule index={this.state.index} _id={this.state.schedule[0]._id} customerId={this.state.schedule[0].CustomerId} date={this.state.date} setSchedule={this.setSchedule} handleClose={() => this.handleClose()}/>\r\n            }\r\n        </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DialogBox;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Customer from './Customer';\r\nimport DialogBox from './Dialog'\r\nimport TiffinDropDown from './Common/tiffinDropDown';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isDialogOpen: false\r\n  }\r\n    this.setCustomers = this.setCustomers.bind(this);\r\n    this.filterCustomer = this.filterCustomer.bind(this);\r\n  }\r\n  \r\n  componentDidMount() {\r\n    const that = this;\r\n  }\r\n\r\n  setCustomers(customers) {\r\n    this.setState({customers: customers, originalList: customers})\r\n  }\r\n\r\n  filterCustomer() {\r\n    const products = this.state.originalList.slice();\r\n    const firstName = document.getElementById('FirstName_Search').value;\r\n    const lastName = document.getElementById('LastName_Search').value;\r\n    const tiffinType = document.getElementById('TiffinType_Search').value;\r\n    const date = document.getElementById('Date_Search').value;\r\n\r\n    let newProducts = [];\r\n    let insert = true;\r\n\r\n    products.map(function(customer) {\r\n      insert = true;\r\n\r\n      if(firstName !== '' && customer.FirstName.toLowerCase().indexOf(firstName.toLowerCase()) === -1) {\r\n        insert = false;\r\n      }\r\n\r\n      if(lastName !== '' && customer.LastName.toLowerCase().indexOf(lastName.toLowerCase())  === -1) {\r\n        insert = false;\r\n      }\r\n\r\n      if(customer.TiffinType && tiffinType !== '' && customer.TiffinType.indexOf(tiffinType) === -1) {\r\n        insert = false;\r\n      }\r\n\r\n      insert && newProducts.push(customer);\r\n\r\n    });\r\n\r\n    this.setState({customers:newProducts});\r\n  }\r\n\r\n\r\n  openDialog = (id) => this.setState({ isDialogOpen: true, customerId: id })\r\n \r\n  handleClose = () => this.setState({ isDialogOpen: false })\r\n\r\n  render() {\r\n   \r\n    console.log('customes.........', this.state.customers);\r\n    return [\r\n        <div className=\"App\">\r\n          Welcome Admin <br /> <br />\r\n\r\n          Search Customer: \r\n          First Name: <input type='text' id='FirstName_Search' onChange={this.filterCustomer} />\r\n          &nbsp; Last Name: <input type='text' id='LastName_Search' onChange={this.filterCustomer} />\r\n          &nbsp; <TiffinDropDown id=\"Search\"/> \r\n          &nbsp; Date: <input type='date' id='Date_Search' />\r\n          &nbsp; <input type='button' id='Search' value='Search'/>\r\n          <hr />\r\n          <Customer setCustomers={this.setCustomers} customers={this.state.customers} openDialog={this.openDialog}/>\r\n          {/* <Basic /> */}\r\n\r\n          {/* <Application /> */}\r\n\r\n            {/* <button type=\"button\" onClick={this.openDialog}>Open Dialog</button> */}\r\n                {\r\n                    this.state.isDialogOpen &&\r\n                    <DialogBox handleClose={this.handleClose} customerId={this.state.customerId}/>\r\n                }\r\n        </div>\r\n    ]\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}